version: '3.9'

include:
  - compose.collector.yaml
  - compose.tracing.yaml

services:
  consul:
    image: hashicorp/consul:latest
    container_name: consul
    ports:
      - 8500:8500

  vault:
    image: hashicorp/vault:latest
    container_name: vault
    restart: unless-stopped
    ports:
      - 8200:8200
      - 8201:8201
    cap_add:
      - IPC_LOCK
    environment:
      - VAULT_ADDR=http://127.0.0.1:8200
      - VAULT_API_ADDR=http://127.0.0.1:8200
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ${HOME}/vault/logs:/vault/logs/:rw
      - ${HOME}/vault/data:/vault/data/:rw
      - ${HOME}/vault/config:/vault/config/:rw
      - ${HOME}/vault/certs:/vault/certs/:rw
      - ${HOME}/vault/file:/vault/file/:rw
      - ${HOME}/vault/pki:/vault/pki
      #- ./vault/pki:/vault/pki
      #- /home/jupiter/volumes/vault/:/vault/:rw
    healthcheck:
      retries: 5
    command: vault server -config=/vault/config/config.hcl
    #networks:
    #  - practical-otel-net

  vault-init:
   image: hashicorp/vault:latest
   container_name: localsetup-vault-init
   command:
     - "sh"
     - "-c"
     - "chmod 755 /vault/scripts/vault-init.sh && /vault/scripts/vault-init.sh"
   environment:
     VAULT_ADDR: http://vault:8200
   volumes:
     - ${HOME}/vault/scripts/:/vault/scripts/
     - ${HOME}/vault/pki:/vault/pki
   depends_on:
     vault:
       condition: service_started
   #networks:
     #- practical-otel-net

  postgres:
    container_name: postgres-db
    image: postgres:16-alpine
    ports:
      # - "127.0.0.1:5432:5432"
      - 5432:5432
    volumes:
      - /var/lib/postgresql/data
    environment:
       - POSTGRES_PASSWORD=newpwd
       - POSTGRES_USER=admin
       #- POSTGRES_DB=postgres
    networks:
      #- postgres
      - practical-otel-net

  keycloak:
      image: quay.io/keycloak/keycloak:latest
      command: start-dev --http-port=9009
      #entrypoint: /opt/keycloak/bin/kc.sh start-dev --hostname-strict=false --features=hostname:v1 --hostname-port=8086
      environment:
        KC_DB : postgres
        #KC_DB_URL: postgres-db
        KC_DB_URL_HOST: postgres-db
        KC_DB_URL_DATABASE: keycloak
        KC_DB_USERNAME: admin
        KC_DB_PASSWORD: newpwd
        KC_DB_SCHEMA: public
        KC_HEALTH_ENABLED: true
        KC_METRICS_ENABLED: true
        KEYCLOAK_ADMIN: admin
        KEYCLOAK_ADMIN_PASSWORD: newpwd
      ports:
        - 9003:9000
        - 9001:9009
      networks:
        - practical-otel-net
      depends_on:
        - postgres

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./config-files/prometheus.yaml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.listen-address=:8080'
    ports:
      - "8081:8080"
    environment:
      - config.file=/etc/prometheus/prometheus.yml
    networks:
      - practical-otel-net

  loki:
    hostname: loki
    image: grafana/loki:latest
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"
    networks:
      - practical-otel-net

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./config-files/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    depends_on:
      - zipkin
      - prometheus
      - loki
      - collector
    networks:
      - practical-otel-net

networks:
  practical-otel-net:
    name: practical-otel-net
    driver: bridge

volumes:
  cache:
    driver: local

